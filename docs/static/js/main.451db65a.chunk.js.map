{"version":3,"sources":["components/AddCategory.js","helpers/getApi.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","placeholder","getApi","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","image","id","title","images","fixed_height","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAOd,SACE,uBACEK,KAAK,OACLC,MAAOP,EACPQ,SARoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,QAQnBG,YAAY,gC,uBCrBPC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,gDACiCC,UAAUH,GAD3C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAKQ,EAAMG,OAAOC,aAAaZ,QARjB,kBAWbM,GAXa,4CAAH,sDCENO,EAAc,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,MAAMV,EAAY,EAAZA,IAAY,EAARS,GACrC,OACE,mCACE,sBAAKK,UAAU,OAAf,UACE,qBACEC,IAAKf,EACLgB,IAAMN,IAER,4BAAIA,UCNCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBxC,OAdAC,qBAAU,WACRxB,EAAOC,GACJwB,MAAM,SAAAhB,GAAI,OACTiB,YAAW,WACTH,EACE,CACEf,KAAMC,EACNY,SAAS,MAGb,WAEN,CAACpB,IAEIqB,EDlBuBK,CAAa1B,GAA9BQ,EADwB,EAC9BD,KAAYa,EADkB,EAClBA,QACnB,OACE,qCACE,mCAAOpB,EAAP,OAEEoB,GAAW,cAEb,qBAAKJ,UAAU,YAAf,SAEMR,EAAKC,KAAI,SAACkB,GACR,OAAO,cAAC,EAAD,CAAaf,MAAOe,EAAIf,MAAOV,IAAKyB,EAAIzB,KAAUyB,EAAIhB,aEV9DiB,EAAe,WAAO,IAAD,EACGzC,mBAAS,CAAC,gBADb,mBACzB0C,EADyB,KACd3C,EADc,KAEhC,OACE,qCACE,oBAAI8B,UAAU,QAAd,0BACA,cAAC,EAAD,CAAa9B,cAAeA,IAC5B,uBAEE2C,EAAWpB,KAAI,SAACT,GACd,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCT/B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.451db65a.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('')\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories(cats => [inputValue, ...cats ]);\n    setInputValue('');\n  }\n\n  const handleChangeInput = (e) => {\n    setInputValue(e.target.value);\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        value={inputValue}\n        onChange={handleChangeInput}\n        placeholder=\"Busca tu gif Favorito :D\"\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","export const getApi = async(category) => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=V6QGYoLheM381AuLKVUEnQTpe3CshAGw`;\n  const resp = await fetch(url);\n  const {data} = await resp.json();\n  const gifs = data.map( image => {\n    return {\n        id: image.id,\n        title: image.title,\n        url: image.images.fixed_height.url,\n       }\n  })\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url,id}) => {\n  return (\n    <>\n      <div className=\"card\">\n        <img \n          src={url}\n          alt={ title }\n        />\n        <p>{title}</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n  const {data: gifs, loading} = useFetchGifs(category);\n  return (\n    <>\n      <h3> { category } </h3>\n      {\n        loading && 'Cargando...'\n      }\n      <div className=\"card-grid\">\n          {\n            gifs.map((img) => {\n              return <GifGridItem title={img.title} url={img.url} key={img.id}></GifGridItem>\n            })\n          }\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport {getApi} from '../helpers/getApi';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(()=> {\n    getApi(category)\n      .then( gifs => \n        setTimeout(()=> {\n          setState(\n            {\n              data: gifs,\n              loading: false\n            }\n          )\n        },1400)\n        )\n  },[category])\n\n  return state;\n}\n","import React, {useState} from 'react';\nimport {AddCategory} from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n  const [categories,setCategories] = useState(['Dragon Ball']);\n  return(\n    <>\n      <h2 className='title'>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      {\n        categories.map((category) => {\n          return <GifGrid key={category} category={category}></GifGrid>\n        })\n      }\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}